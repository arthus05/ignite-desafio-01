{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","assets/images/logo.svg","components/Header/styles.ts","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","getProduct","id","a","get","product","data","getStock","stock","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","addProduct","productId","cartIds","map","includes","cartProduct","filter","amount","newCart","setItem","stringify","toast","error","newProduct","removeProduct","Error","removedCart","updateProductAmount","stockResponse","Provider","value","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","useEffect","response","formatedProducts","priceFormatted","price","loadProducts","src","alt","title","type","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","cartFormatted","subTotal","total","sumTotal","disabled","handleProductDecrement","readOnly","handleProductIncrement","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36c655b3.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n\n      display: flex;\n      align-items: center;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\n  style: 'currency',\n  currency: 'BRL',\n});\n","import { createContext, ReactNode, useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { Product, Stock } from '../types';\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\n\ninterface CartContextData {\n  cart: Product[];\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nasync function getProduct(id: number) {\n  const { data: product } = await api.get(`/products/${id}`)\n\n  return product\n}\n\nasync function getStock(id: number): Promise<Stock> {\n  const { data: stock } = await api.get(`/stock/${id}`)\n\n  return stock\n}\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<Product[]>(() => {\n    const storagedCart = localStorage.getItem('@RocketShoes:cart')\n\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n\n  const addProduct = async (productId: number) => {\n    try {\n      const product = await getProduct(productId)\n\n      const stock = await getStock(productId)\n\n      const cartIds: number[] = cart.map(product => {\n        return product.id\n      })\n\n      if (cartIds.includes(productId)) {\n\n        const cartProduct = cart.filter(product => productId === product.id)[0]\n\n        if (cartProduct.amount < stock.amount) {\n          const newCart = cart.map(product => {\n            if (product.id === productId) {\n              return { ...product, amount: product.amount + 1 }\n            } else {\n              return product\n            }\n          })\n          setCart(newCart)\n          localStorage.setItem('@RocketShoes:cart', JSON.stringify(newCart))\n        } else {\n          toast.error('Quantidade solicitada fora de estoque')\n        }\n\n      } else {\n        if (stock.amount > 0) {\n          const newProduct = { ...product, amount: 1 }\n          setCart([...cart, newProduct])\n          localStorage.setItem('@RocketShoes:cart', JSON.stringify([...cart, newProduct]))\n        } else {\n          toast.error('Quantidade solicitada fora de estoque')\n        }\n      }\n\n    } catch {\n      toast.error('Erro na adição do produto')\n    }\n  };\n\n  const removeProduct = async (productId: number) => {\n    try {\n      const cartIds: number[] = cart.map(product => {\n        return product.id\n      })\n\n      if (!cartIds.includes(productId)) {\n        throw Error\n      } else {\n        const removedCart = cart.filter(product => product.id !== productId)\n        setCart(removedCart)\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(removedCart))\n      }\n    } catch {\n      toast.error('Erro na remoção do produto')\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n    amount,\n  }: UpdateProductAmount) => {\n    try {\n      if (amount <= 0) throw Error\n\n      const stockResponse = await api.get(`/stock/${productId}`)\n      const stock: Stock = stockResponse.data\n\n      if (amount <= stock.amount) {\n        setCart(cart.map(product => {\n          if (product.id === productId) {\n            product.amount = amount\n            return product\n          } else {\n            return product\n          }\n        }))\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart))\n      } else {\n        toast.error('Quantidade solicitada fora de estoque')\n      }\n\n    } catch {\n      toast.error('Erro na alteração de quantidade do produto')\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n","import { useState, useEffect } from 'react';\nimport { MdAddShoppingCart } from 'react-icons/md';\n\nimport { ProductList } from './styles';\nimport { api } from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport { useCart } from '../../hooks/useCart';\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n}\n\ninterface ProductFormatted extends Product {\n  priceFormatted: string;\n}\n\ninterface CartItemsAmount {\n  [key: number]: number;\n}\n\nconst Home = (): JSX.Element => {\n  const [products, setProducts] = useState<ProductFormatted[]>([]);\n  const { addProduct, cart } = useCart();\n\n  const cartItemsAmount = cart.reduce((sumAmount, product) => {\n\n    sumAmount = {\n      ...sumAmount,\n      [product.id]: product.amount\n    }\n\n    return sumAmount\n  }, {} as CartItemsAmount)\n\n  useEffect(() => {\n    async function loadProducts() {\n      // TODO\n      const response = await api.get<Product[]>('/products')\n\n      const formatedProducts: ProductFormatted[] = response.data.map(product => (\n        {\n          ...product,\n          priceFormatted: formatPrice(product.price)\n        }\n      ))\n\n      setProducts(formatedProducts)\n    }\n\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id: number) {\n    // TODO\n    addProduct(id)\n  }\n\n  return (\n    <ProductList>\n      {\n        products.map(product => (\n          <li key={product.id}>\n            <img src=\"https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/modulo-redux/tenis1.jpg\" alt=\"Tênis de Caminhada Leve Confortável\" />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n            <button\n              type=\"button\"\n              data-testid=\"add-product-button\"\n              onClick={() => handleAddProduct(product.id)}\n            >\n              <div data-testid=\"cart-product-quantity\">\n                <MdAddShoppingCart size={16} color=\"#FFF\" />\n                {cartItemsAmount[product.id] || 0}\n              </div>\n\n              <span>ADICIONAR AO CARRINHO</span>\n            </button>\n          </li>\n        ))\n      }\n\n    </ProductList>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n\n    svg {\n      color: #7159c1;\n      transition: color 0.2s;\n    }\n\n    &:hover {\n      svg {\n        color: ${darken(0.06, '#7159c1')};\n      }\n    }\n\n    &:disabled {\n      svg {\n        color: ${lighten(0.25, '#7159c1')};\n        cursor: not-allowed;\n      }\n    }\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n","import React from 'react';\nimport {\n  MdDelete,\n  MdAddCircleOutline,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\n\nimport { useCart } from '../../hooks/useCart';\nimport { formatPrice } from '../../util/format';\nimport { Container, ProductTable, Total } from './styles';\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n  amount: number;\n}\n\nconst Cart = (): JSX.Element => {\n  const { cart, removeProduct, updateProductAmount } = useCart();\n\n  const cartFormatted = cart.map(product => ({\n    ...product,\n    priceFormatted: formatPrice(product.price),\n    subTotal: formatPrice(product.price * product.amount)\n  }))\n\n  const total =\n    formatPrice(\n      cart.reduce((sumTotal, product) => {\n        sumTotal += product.price * product.amount\n        return sumTotal\n      }, 0)\n    )\n\n  function handleProductIncrement(product: Product) {\n    updateProductAmount({\n      productId: product.id,\n      amount: product.amount + 1\n    })\n  }\n\n  function handleProductDecrement(product: Product) {\n    updateProductAmount({\n      productId: product.id,\n      amount: product.amount - 1\n    })\n  }\n\n  function handleRemoveProduct(productId: number) {\n    removeProduct(productId)\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th aria-label=\"product image\" />\n            <th>PRODUTO</th>\n            <th>QTD</th>\n            <th>SUBTOTAL</th>\n            <th aria-label=\"delete icon\" />\n          </tr>\n        </thead>\n        <tbody>\n          {\n            cartFormatted.map(product => (\n              <tr data-testid=\"product\" key={product.id}>\n                <td>\n                  <img src=\"https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/modulo-redux/tenis1.jpg\" alt=\"Tênis de Caminhada Leve Confortável\" />\n                </td>\n                <td>\n                  <strong>{product.title}</strong>\n                  <span>{product.priceFormatted}</span>\n                </td>\n                <td>\n                  <div>\n                    <button\n                      type=\"button\"\n                      data-testid=\"decrement-product\"\n                      disabled={product.amount <= 1}\n                      onClick={() => handleProductDecrement(product)}\n                    >\n                      <MdRemoveCircleOutline size={20} />\n                    </button>\n                    <input\n                      type=\"text\"\n                      data-testid=\"product-amount\"\n                      readOnly\n                      value={product.amount}\n                    />\n                    <button\n                      type=\"button\"\n                      data-testid=\"increment-product\"\n                      onClick={() => handleProductIncrement(product)}\n                    >\n                      <MdAddCircleOutline size={20} />\n                    </button>\n                  </div>\n                </td>\n                <td>\n                  <strong>{product.subTotal}</strong>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    data-testid=\"remove-product\"\n                    onClick={() => handleRemoveProduct(product.id)}\n                  >\n                    <MdDelete size={20} />\n                  </button>\n                </td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </ProductTable>\n\n      <footer>\n        <button type=\"button\">Finalizar pedido</button>\n\n        <Total>\n          <span>TOTAL</span>\n          <strong>{total}</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n};\n\nexport default Cart;\n","import { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nconst Routes = (): JSX.Element => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/cart\" component={Cart} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/background.d1721c83.svg\";","import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 14px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.eb50c339.svg\";","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n\n  a {\n    transition: opacity 0.2s;\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { MdShoppingBasket } from 'react-icons/md';\n\nimport logo from '../../assets/images/logo.svg';\nimport { Container, Cart } from './styles';\nimport { useCart } from '../../hooks/useCart';\n\nconst Header = (): JSX.Element => {\n  const { cart } = useCart();\n  const cartSize = cart.length;\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logo} alt=\"Rocketshoes\" />\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>Meu carrinho</strong>\n          <span data-testid=\"cart-size\">\n            {cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}\n          </span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#FFF\" />\n      </Cart>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\nimport Header from './components/Header';\nimport { CartProvider } from './hooks/useCart';\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <CartProvider>\n        <GlobalStyles />\n        <Header />\n        <Routes />\n        <ToastContainer autoClose={3000} />\n      </CartProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}